version: '3.8'

services:
  db:
    container_name: database-service
    image: postgres:latest
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    restart: always

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    ports:
      - "5050:80"
    restart: always

  back-end:
    build:
      context: .
      dockerfile: Dockerfile.back
    container_name: back_end-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PW}
    ports:
      - "9001:8080"
    restart: always
    depends_on:
      - db

  authentication:
    build:
      context: .
      dockerfile: Dockerfile.auth
    container_name: authentication-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PW}
    ports:
      - "9002:8081"
    restart: always
    depends_on:
      - db
      - back-end

  broker:
    container_name: rabbitmq-service
    image: rabbitmq:3-management
    ports:
      - "5672:5672"    # RabbitMQ protocol
      - "15672:15672"  # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: always
    depends_on:
      - db
      - back-end

  notification:

    container_name: notification-service
    build:
      context: .
      dockerfile: Dockerfile.notif
    ports:
      - "9003:8080"
    restart: always

    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PW}
      - SPRING_RABBITMQ_HOST=${RABBITMQ_HOST}
      - SPRING_RABBITMQ_PORT=${RABBITMQ_PORT}
      - SPRING_RABBITMQ_USERNAME=${RABBITMQ_USER}
      - SPRING_RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    depends_on:
      - db
      - back-end
      - broker


  # front-end:
  #   build:
  #     context: ../front-end/source
  #     dockerfile: ../../Docker/Dockerfile.front
  #   container_name: front_end-service
  #   environment:
  #     - REACT_APP_BACKEND_URL=http://localhost:9001
  #     - REACT_APP_AUTH_URL=http://localhost:9002
  #   ports:
  #     - "3000:3000"
  #   restart: always
  #   depends_on:
  #     - back-end
  #     - authentication

  #Development only - remove in production
  front-end:
    build:
      context: ../front-end/source
      dockerfile: ../../Docker/Dockerfile.front
    container_name: front_end-service
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:9001
      - REACT_APP_AUTH_URL=http://localhost:9002
      - CHOKIDAR_USEPOLLING=true  
    ports:
      - "3000:3000"
    volumes:
      - ../front-end/source:/app
    command: npm run dev -- --host 0.0.0.0 --port 3000
    depends_on:
      - back-end
      - authentication

volumes:
  db_data:
  rabbitmq_data: